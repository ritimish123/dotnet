Salient features in Csharp -
Simple
modern programming language
object oriented
type safe
interoperability
Scalable and updateable
Componenent oriented
Structured programming language



The latest features of CSharp-
Readonly members
Default interface methods
Pattern matching enhancements:Switch expressions.Property patterns.Tuple patterns
Using declarations
Static local functions
Disposable ref structs
Nullable reference types
Asynchronous streams


One of the most salient feature in c sharp-

Lambda Expressions-

Lambda expressions are anonymous functions that contain expressions or sequence of operators. 
All lambda expressions use the lambda operator =>, that can be read as “goes to” or “becomes”. 
The left side of the lambda operator specifies the input parameters and the right side holds an expression or a code block that works with the entry parameters.
Usually lambda expressions are used as predicates or instead of delegates (a type that references a method).
 

Parameter => expression
Parameter-list => expression
Count => count + 2;
Sum => sum + 2;
n => n % 2 == 0

The lambda operator => divides a lambda expression into two parts. The left side is the input parameter and the right side is the lambda body.

 Example-


using System;  
using System.Collections.Generic;  
using System.Linq;  
public static class demo  
{  
    public static void Main()  
    {  
        List<int> list = new List<int>() { 1, 2, 3, 4, 5, 6 };  
        List<int> evenNumbers = list.FindAll(x => (x % 2) == 0);  
  
        foreach (var num in evenNumbers)  
        {  
            Console.Write("{0} ", num);  
        }  
        Console.WriteLine();  
        Console.Read();  
  
    }  
}  


output-2 4 6


The preceding example loops through the entire collection of numbers and each element (named x) is checked to determine if the number is a multiple of 2 (using the Boolean expression (x % 2) == 0).

 

